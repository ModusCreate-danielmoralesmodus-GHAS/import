name: Scan PowerShell Code

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  # Required to upload results to the Security tab
  security-events: write

jobs:
  analyze:
    name: Run PSScriptAnalyzer Scan
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Run PSScriptAnalyzer and create SARIF
  shell: pwsh
  run: |
    Write-Host "--- Ensuring PSGallery is trusted ---"
    if (-not (Get-PSRepository -Name 'PSGallery' -ErrorAction SilentlyContinue)) {
      Register-PSRepository -Default -ErrorAction Stop
    }
    Set-PSRepository -Name 'PSGallery' -InstallationPolicy Trusted

    Write-Host "--- Updating PowerShellGet and PSScriptAnalyzer ---"
    Update-Module -Name PowerShellGet -Force -ErrorAction SilentlyContinue
    if (-not (Get-Module -ListAvailable -Name PSScriptAnalyzer)) {
      Install-Module -Name PSScriptAnalyzer -Force -ErrorAction Stop
    } else {
      Update-Module -Name PSScriptAnalyzer -Force -ErrorAction SilentlyContinue
    }

    $sarifFile = Join-Path $env:GITHUB_WORKSPACE "psscriptanalyzer-results.sarif"

    Write-Host "--- Running PSScriptAnalyzer ---"
    Invoke-ScriptAnalyzer -Path $env:GITHUB_WORKSPACE -Recurse -ReportSummary `
      -OutFormat SARIF -OutFile $sarifFile -ErrorAction Continue

    Write-Host "--- Scan complete. SARIF file generated. ---"


      - name: Upload SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          # Path to the file generated by the previous step
          sarif_file: 'psscriptanalyzer-results.sarif'
          
          # A unique category name for this tool
          category: 'PSScriptAnalyzer'
